<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using BenchmarkDotNet.Attributes;

using System;

namespace BenchmarkDotNet.IntegrationTests.InProcess.EmitTests
{
    /// <summary>
    /// Generated class to check emitted msil cases
    /// </summary>
    public class RunnableRefStructCaseBenchmark
    {
<#
    int counter = 1;

    EmitRefStructCaseBenchmark(ref counter, "Span<int>", "new[] { 0, 1, 2 }");
    EmitRefStructCaseBenchmark(ref counter, "ReadOnlySpan<string>", "new[] { \"A\", \"B\", \"C\" }");
    EmitRefStructCaseBenchmark(ref counter, "Memory<int>", "new[] { 0, 1, 2 }");
    EmitRefStructCaseBenchmark(ref counter, "ReadOnlyMemory<string>", "new[] { \"A\", \"B\", \"C\" }");
#>
    }
}<#+

    private void EmitRefStructCaseBenchmark(ref int counter, string type, string argValue)
    {
#>
        // ---- Begin StructCase(<#=type#>) ----

        [Benchmark, Arguments(<#=argValue#>, "<#=counter#>", 0.<#=counter#>)]
        public <#=type#> RefStructCase<#=counter#>(<#=type#> x, ref string y, double? z) => x;

<#+
        counter++;
    }
#>
