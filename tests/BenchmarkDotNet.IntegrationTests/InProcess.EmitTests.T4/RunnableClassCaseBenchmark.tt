<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using BenchmarkDotNet.Attributes;

namespace BenchmarkDotNet.IntegrationTests.InProcess.EmitTests
{
    /// <summary>
    /// Generated class to check emitted msil cases
    /// </summary>
    public class RunnableClassCaseBenchmark
    {
<#
    int counter = 1;
    EmitClassCaseBenchmark(ref counter, "string");
    EmitClassCaseBenchmark(ref counter, "CustomClassConsumable<int>");
    EmitClassCaseBenchmark(ref counter, "CustomClassConsumable<string>");
#>
    }
}<#+

    private void EmitClassCaseBenchmark(ref int counter, string type)
    {
        var argValue = "null";
#>
        // ---- Begin ClassCase(<#=type#>) ----

        private <#=type#> _refResultHolder<#=counter#>;

        [Benchmark]
        public <#=type#> ClassCase<#=counter#>() => default;

        [Benchmark, Arguments(<#=argValue#>, "<#=counter#>", 0.<#=counter#>)]
        public <#=type#> ClassCase<#=counter#>(<#=type#> x, ref string y, double? z) => default;

        [Benchmark]
        public ref <#=type#> RefReturnClassCase<#=counter#>() => ref _refResultHolder<#=counter#>;

        [Benchmark, Arguments(<#=argValue#>, "<#=counter#>", 0.<#=counter#>)]
        public ref <#=type#> RefReturnClassCase<#=counter#>(<#=type#> x, ref string y, double? z) => ref _refResultHolder<#=counter#>;

<#+
        counter++;
    }
#>
